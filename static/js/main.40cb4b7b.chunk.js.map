{"version":3,"sources":["App.js","component/Calculator/CalcContainer.js","component/Calculator/CalcButton.js","component/Calculator/CalcForm.js","serviceWorker.js","index.js"],"names":["App","state","result","resultStatus","functions","onClick","buttonValue","setState","eval","e","length","slice","className","this","funcFromApp","React","Component","CalcContainer","props","children","CalcButton","name","CalcForm","style","background","color","textAlign","padding","minHeight","boxShadow","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40cb4b7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport CalcContainer from \"./component/Calculator/CalcContainer\";\r\nimport CalcButton from \"./component/Calculator/CalcButton\";\r\nimport CalcForm from \"./component/Calculator/CalcForm\";\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n       result:'',\r\n       resultStatus: false\r\n    };\r\n\r\n    functions = {\r\n\r\n        onClick : (buttonValue) => {\r\n            if (buttonValue === \"=\") {\r\n                try {\r\n                    this.setState({\r\n                        // eslint-disable-next-line no-eval\r\n                        result: (eval(this.state.result) || \"\") + \"\",\r\n                        resultStatus: true\r\n                    })\r\n                } catch (e) {\r\n                    this.setState({\r\n                        result: \"error\"\r\n                    })\r\n                }\r\n            } else if (buttonValue === \"C\") {\r\n                this.setState({\r\n                    result: ''\r\n                })\r\n            } else if (buttonValue === \"←\") {\r\n                if (this.state.result.length > 1) {\r\n                    this.setState({\r\n                        result: this.state.result.slice(0, -1)\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        result: ''\r\n                    })\r\n                }\r\n            } else if(buttonValue === \"%\") {\r\n                this.setState({\r\n                    result : this.state.result /100\r\n                })\r\n\r\n        }else {\r\n                this.setState({\r\n                    result: this.state.result + buttonValue\r\n                })\r\n            }\r\n        },\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <CalcContainer>\r\n                    <CalcForm result={this.state.result}/>\r\n                    <CalcButton funcFromApp={this.functions}/>\r\n                </CalcContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\n\r\nclass CalcContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-10 col-xl-9 mx-auto\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Simple Calculator</h5>\r\n                                {this.props.children[0]}\r\n                                <div>\r\n                                    {this.props.children[1]}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalcContainer;","import React, {Component} from 'react';\r\n\r\nclass CalcButton extends Component {\r\n    render() {\r\n\r\n        const {onClick} = this.props.funcFromApp\r\n\r\n\r\n                return (\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('C')} className='btn btn-dark btn-block myBtn'>C</button>\r\n\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('-')} className='btn btn-dark btn-block myBtn'>-/+</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('%')} className='btn btn-dark btn-block myBtn' >%</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('/')} className='btn btn-danger btn-block myBtn'>÷</button>\r\n                    </div>\r\n                </div>\r\n                <div className='row justify-content-md-center'>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('7')} className='btn btn-dark btn-block myBtn'>7</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('8')} className='btn btn-dark btn-block myBtn'>8</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('9')} className='btn btn-dark btn-block myBtn'>9</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('*')} className='btn btn-danger btn-block myBtn'>x</button>\r\n                    </div>\r\n                </div>\r\n                <div className='row row justify-content-md-center'>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('4')} className='btn btn-dark btn-block myBtn'>4</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('5')} className='btn btn-dark btn-block myBtn' name=\"5\">5</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('6')} className='btn btn-dark btn-block myBtn'>6</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('-')} className='btn btn-danger btn-block myBtn'>-</button>\r\n                    </div>\r\n                </div>\r\n                <div className='row row justify-content-md-center'>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('1')} className='btn btn-dark btn-block myBtn'>1</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('2')} className='btn btn-dark btn-block myBtn' >2</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('3')} className='btn btn-dark btn-block myBtn'>3</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('+')} className='btn btn-danger btn-block myBtn'>+</button>\r\n                    </div>\r\n                </div>\r\n                <div className='row justify-content-md-center'>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('.')} className='btn btn-dark btn-block myBtn'>.</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('0')} className='btn btn-dark btn-block myBtn'>0</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('←')} className='btn btn-danger btn-block myBtn'>←</button>\r\n                    </div>\r\n                    <div className='col-3 myCol'>\r\n                        <button onClick={() => onClick('=')} className='btn btn-danger btn-block myBtn'>=</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalcButton;","import React, {Component} from 'react';\r\n\r\nclass CalcForm extends Component {\r\n    render() {\r\n\r\n        const {result} = this.props\r\n\r\n        const calcForm = {\r\n            background: '#343a40',\r\n            color: 'white',\r\n            textAlign: 'right',\r\n            padding: 3,\r\n            minHeight:'75px',\r\n            boxShadow : '0px 0px 40px #888888'\r\n        }\r\n\r\n        const calcFormText = {\r\n            margin: '2%'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={calcForm}>\r\n                    <h1 style={calcFormText}>{result}</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalcForm;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}